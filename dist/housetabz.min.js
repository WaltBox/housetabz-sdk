/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/core/index.ts":
/*!***************************!*\
  !*** ./src/core/index.ts ***!
  \***************************/
/***/ (function(__unused_webpack_module, exports) {

eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.HouseTabzError = void 0;\nvar HouseTabzError = /** @class */ (function (_super) {\n    __extends(HouseTabzError, _super);\n    function HouseTabzError(message, code) {\n        var _this = _super.call(this, message) || this;\n        _this.code = code;\n        _this.name = 'HouseTabzError';\n        return _this;\n    }\n    return HouseTabzError;\n}(Error));\nexports.HouseTabzError = HouseTabzError;\nvar HouseTabz = /** @class */ (function () {\n    function HouseTabz() {\n        this.config = null;\n        this.params = null;\n        this.baseUrl = '';\n        this.isInHouseTabzApp = false;\n        // Check if we're running inside the HouseTabz WebView\n        this.detectHouseTabzApp();\n    }\n    // Simple detection method that checks for ReactNativeWebView\n    HouseTabz.prototype.detectHouseTabzApp = function () {\n        try {\n            // Use a more direct check for the WebView environment\n            this.isInHouseTabzApp = !!window.ReactNativeWebView;\n            console.log('HouseTabz app detection:', {\n                isInHouseTabzApp: this.isInHouseTabzApp,\n                hasReactNativeWebView: !!window.ReactNativeWebView\n            });\n        }\n        catch (error) {\n            console.warn('Error during HouseTabz app detection:', error);\n            this.isInHouseTabzApp = false;\n        }\n    };\n    HouseTabz.getInstance = function () {\n        if (!HouseTabz.instance) {\n            HouseTabz.instance = new HouseTabz();\n        }\n        return HouseTabz.instance;\n    };\n    HouseTabz.prototype.determineBaseUrl = function (environment) {\n        if (environment === void 0) { environment = 'development'; }\n        var urls = {\n            production: 'https://housetabz.com',\n            staging: 'https://staging.housetabz.com',\n            development: 'http://localhost:3000'\n        };\n        return urls[environment] || urls.development;\n    };\n    HouseTabz.prototype.extractURLParams = function () {\n        var params = new URLSearchParams(window.location.search);\n        var userId = params.get('user_id');\n        var partnerId = params.get('partner_id');\n        var ref = params.get('ref');\n        console.log('Extracted URL params:', { userId: userId, partnerId: partnerId, ref: ref });\n        return { userId: userId, partnerId: partnerId, ref: ref };\n    };\n    HouseTabz.prototype.init = function (config) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                try {\n                    // Store config\n                    this.config = config;\n                    this.baseUrl = this.determineBaseUrl(config.environment);\n                    console.log('Initializing HouseTabz:', {\n                        baseUrl: this.baseUrl,\n                        environment: config.environment,\n                        isInHouseTabzApp: this.isInHouseTabzApp\n                    });\n                    // Only validate API keys\n                    if (!config.apiKey || !config.secretKey) {\n                        throw new HouseTabzError('API key and Secret key are required', 'INVALID_CONFIG');\n                    }\n                    // Extract URL params but don't require them\n                    this.params = this.extractURLParams();\n                    console.log('HouseTabz initialized successfully');\n                }\n                catch (error) {\n                    console.error('Initialization failed:', error);\n                    throw error;\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    HouseTabz.prototype.mount = function (selector, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var container;\n            return __generator(this, function (_a) {\n                try {\n                    console.log('Mounting HouseTabz button with options:', options);\n                    container = document.querySelector(selector);\n                    if (!container) {\n                        throw new HouseTabzError(\"Container \".concat(selector, \" not found\"), 'INVALID_SELECTOR');\n                    }\n                    this.renderButton(container, options);\n                }\n                catch (error) {\n                    console.error('Mount failed:', error);\n                    throw error;\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    HouseTabz.prototype.renderButton = function (container, options) {\n        var _this = this;\n        var _a, _b;\n        var wrapper = document.createElement('div');\n        wrapper.className = 'housetabz-wrapper';\n        // Create the button with proper fixed styling\n        var button = document.createElement('button');\n        button.className = 'housetabz-connect-button';\n        // Apply custom styles if provided\n        if (options.buttonStyle) {\n            // Apply custom width\n            if (options.buttonStyle.width) {\n                button.style.width = options.buttonStyle.width;\n            }\n            // Apply custom border radius\n            if (options.buttonStyle.borderRadius) {\n                button.style.borderRadius = options.buttonStyle.borderRadius;\n            }\n        }\n        // Use the real HouseTabz logo with fallback\n        var buttonText = ((_a = options.buttonStyle) === null || _a === void 0 ? void 0 : _a.buttonText) || 'Pay with';\n        button.innerHTML = \"\\n      <span class=\\\"housetabz-button-content\\\">\\n        <span class=\\\"housetabz-logo\\\">\\n          <img src=\\\"https://housetabz-assets.s3.us-east-1.amazonaws.com/assets/housetabzlogo-update.png\\\" \\n               alt=\\\"HouseTabz\\\" \\n               onerror=\\\"this.onerror=null; this.innerHTML='HT';\\\" />\\n        </span>\\n        <span class=\\\"housetabz-text\\\">\".concat(buttonText, \" <span class=\\\"housetabz-brand\\\">HouseTabz</span></span>\\n      </span>\\n    \");\n        // Apply custom font size if provided\n        if ((_b = options.buttonStyle) === null || _b === void 0 ? void 0 : _b.fontSize) {\n            var textElement = button.querySelector('.housetabz-text');\n            if (textElement) {\n                textElement.style.fontSize = options.buttonStyle.fontSize;\n            }\n        }\n        var loadingSpinner = document.createElement('div');\n        loadingSpinner.className = 'housetabz-spinner';\n        loadingSpinner.style.display = 'none';\n        var messageContainer = document.createElement('div');\n        messageContainer.className = 'housetabz-message';\n        messageContainer.style.display = 'none';\n        button.onclick = function () {\n            try {\n                // Show loading state\n                button.disabled = true;\n                loadingSpinner.style.display = 'inline-block';\n                messageContainer.style.display = 'block';\n                // Recheck if we're in the app - this happens after the page is fully loaded\n                var isInApp = !!window.ReactNativeWebView;\n                // Different message and flow based on environment\n                if (isInApp) {\n                    messageContainer.innerHTML = '<p>Opening HouseTabz payment...</p>';\n                    _this.handleInAppPayment(options, button, loadingSpinner, messageContainer);\n                }\n                else {\n                    messageContainer.innerHTML = '<p>Redirecting to HouseTabz...</p>';\n                    _this.redirectToConfirmPage(options);\n                }\n            }\n            catch (error) {\n                // Handle any errors during processing\n                _this.handleError(button, messageContainer, error, options);\n                loadingSpinner.style.display = 'none';\n            }\n        };\n        wrapper.appendChild(button);\n        button.appendChild(loadingSpinner);\n        wrapper.appendChild(messageContainer);\n        container.innerHTML = '';\n        container.appendChild(wrapper);\n    };\n    HouseTabz.prototype.handleInAppPayment = function (options, button, loadingSpinner, messageContainer) {\n        var _this = this;\n        if (!this.config) {\n            throw new HouseTabzError('HouseTabz not initialized properly', 'NOT_INITIALIZED');\n        }\n        try {\n            // Create payment request data with just the transaction details\n            // No authentication data needed - that will be handled by the app modal\n            var paymentData = {\n                serviceName: options.serviceName,\n                serviceType: options.serviceType,\n                amount: options.estimatedAmount,\n                upfront: options.requiredUpfrontPayment || 0,\n                transactionId: options.transactionId,\n                apiKey: this.config.apiKey,\n                secretKey: this.config.secretKey\n            };\n            console.log('Sending payment request to app:', paymentData);\n            // Send message to React Native WebView\n            console.log('About to send message to ReactNativeWebView:', paymentData);\n            window.ReactNativeWebView.postMessage(JSON.stringify({\n                type: 'housetabz_payment_request',\n                data: paymentData\n            }));\n            console.log('Message sent to ReactNativeWebView');\n            // Listen for response from the app\n            window.addEventListener('message', function (event) {\n                try {\n                    if (typeof event.data === 'string') {\n                        var response = JSON.parse(event.data);\n                        if (response.type === 'housetabz_payment_response') {\n                            if (response.status === 'success') {\n                                // Handle success\n                                loadingSpinner.style.display = 'none';\n                                button.disabled = false;\n                                messageContainer.innerHTML = \"\\n                  <div class=\\\"success-box\\\">\\n                    <svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n                      <path d=\\\"M10 18C14.4183 18 18 14.4183 18 10C18 5.58172 14.4183 2 10 2C5.58172 2 2 5.58172 2 10C2 14.4183 5.58172 18 10 18Z\\\" stroke=\\\"#10b981\\\" stroke-width=\\\"2\\\"/>\\n                      <path d=\\\"M7 10L9 12L13 8\\\" stroke=\\\"#10b981\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"/>\\n                    </svg>\\n                    <p>Payment request successful!</p>\\n                  </div>\\n                \";\n                                if (options.onSuccess)\n                                    options.onSuccess(response.data);\n                            }\n                            else if (response.status === 'error') {\n                                // Handle error\n                                _this.handleError(button, messageContainer, new Error(response.message), options);\n                            }\n                            else if (response.status === 'cancel') {\n                                // Handle cancellation\n                                loadingSpinner.style.display = 'none';\n                                button.disabled = false;\n                                messageContainer.innerHTML = '<p>Payment request cancelled</p>';\n                                if (options.onCancel)\n                                    options.onCancel();\n                            }\n                        }\n                    }\n                }\n                catch (error) {\n                    console.error('Error processing app response:', error);\n                }\n            });\n        }\n        catch (error) {\n            console.error('Error in in-app payment flow:', error);\n            this.handleError(button, messageContainer, error, options);\n        }\n    };\n    HouseTabz.prototype.redirectToConfirmPage = function (options) {\n        var _a, _b, _c;\n        if (!this.config) {\n            throw new HouseTabzError('HouseTabz not initialized properly', 'NOT_INITIALIZED');\n        }\n        // Build URL parameters for the confirm page\n        var params = new URLSearchParams({\n            serviceName: options.serviceName,\n            serviceType: options.serviceType,\n            amount: options.estimatedAmount.toString(),\n            upfront: ((_a = options.requiredUpfrontPayment) === null || _a === void 0 ? void 0 : _a.toString()) || '0',\n            transactionId: options.transactionId,\n            apiKey: this.config.apiKey,\n            secretKey: this.config.secretKey\n        });\n        // Use userId from different sources in order of priority:\n        // 1. Direct config value (if provided)\n        // 2. URL parameter (if present)\n        var userId = this.config.userId || ((_b = this.params) === null || _b === void 0 ? void 0 : _b.userId) || '';\n        if (userId) {\n            params.append('user_id', userId);\n        }\n        // Use partnerId from different sources in order of priority:\n        // 1. Direct config value (if provided)\n        // 2. URL parameter (if present)\n        var partnerId = this.config.partnerId || ((_c = this.params) === null || _c === void 0 ? void 0 : _c.partnerId) || '';\n        if (partnerId) {\n            params.append('partner_id', partnerId);\n        }\n        // Construct the redirect URL\n        var redirectUrl = \"\".concat(this.baseUrl, \"/confirm-request?\").concat(params.toString());\n        console.log('Redirecting to:', redirectUrl);\n        // Redirect to the confirmation page\n        window.location.href = redirectUrl;\n    };\n    HouseTabz.prototype.handleError = function (button, messageContainer, error, options) {\n        var _a;\n        button.disabled = false;\n        button.classList.remove('loading');\n        messageContainer.style.display = 'block';\n        messageContainer.innerHTML = \"\\n      <div class=\\\"error-box\\\">\\n        <svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n          <path d=\\\"M10 18C14.4183 18 18 14.4183 18 10C18 5.58172 14.4183 2 10 2C5.58172 2 2 5.58172 2 10C2 14.4183 5.58172 18 10 18Z\\\" stroke=\\\"#ef4444\\\" stroke-width=\\\"2\\\"/>\\n          <path d=\\\"M13 7L7 13\\\" stroke=\\\"#ef4444\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\"/>\\n          <path d=\\\"M7 7L13 13\\\" stroke=\\\"#ef4444\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\"/>\\n        </svg>\\n        <p>\".concat(error.message || 'Something went wrong. Please try again.', \"</p>\\n      </div>\\n    \");\n        (_a = options.onError) === null || _a === void 0 ? void 0 : _a.call(options, error);\n    };\n    HouseTabz.VERSION = '1.0.0';\n    HouseTabz.instance = null;\n    return HouseTabz;\n}());\n// Import Montserrat font\nvar fontLink = document.createElement('link');\nfontLink.rel = 'stylesheet';\nfontLink.href = 'https://fonts.googleapis.com/css2?family=Montserrat:wght@400;700;900&display=swap';\ndocument.head.appendChild(fontLink);\n// Apply the new styles\nvar style = document.createElement('style');\nstyle.innerHTML = \"\\n  .housetabz-wrapper {\\n    width: 100%;\\n    margin: 8px 0;\\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;\\n  }\\n\\n  .housetabz-connect-button {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    width: 250px; /* Fixed width matching PayPal */\\n    height: 40px; /* Fixed height */\\n    padding: 0 16px;\\n    background: #ffffff;\\n    border: 1px solid #e0e0e0;\\n    border-radius: 4px;\\n    cursor: pointer;\\n    transition: all 0.2s ease;\\n    position: relative;\\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.08);\\n  }\\n\\n  /* Mobile adjustment for better touch targets */\\n  @media (max-width: 768px) {\\n    .housetabz-connect-button {\\n      height: 44px;\\n    }\\n  }\\n\\n  .housetabz-connect-button:hover {\\n    background-color: #f9f9f9;\\n    border-color: #d0d0d0;\\n  }\\n\\n  .housetabz-connect-button:active {\\n    background-color: #f5f5f5;\\n    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);\\n  }\\n\\n  .housetabz-connect-button:disabled {\\n    opacity: 0.6;\\n    cursor: not-allowed;\\n  }\\n\\n  .housetabz-button-content {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    width: 100%;\\n  }\\n\\n  .housetabz-logo {\\n    margin-right: 8px;\\n    display: flex;\\n    align-items: center;\\n    height: 22px; /* Slightly larger logo */\\n    width: 22px;\\n    flex-shrink: 0;\\n  }\\n\\n  .housetabz-logo img {\\n    height: 100%;\\n    width: auto;\\n  }\\n\\n  .housetabz-text {\\n    font-size: 14px;\\n    font-weight: 500;\\n    color: #424242;\\n    white-space: nowrap;\\n  }\\n\\n  .housetabz-brand {\\n    font-family: 'Montserrat', sans-serif;\\n    font-weight: 900; /* Montserrat Black */\\n    color: #10b981;\\n    letter-spacing: -0.01em;\\n  }\\n\\n  .housetabz-spinner {\\n    position: absolute;\\n    right: 16px;\\n    width: 16px;\\n    height: 16px;\\n    border: 2px solid rgba(0, 0, 0, 0.1);\\n    border-top-color: #10b981;\\n    border-radius: 50%;\\n    animation: housetabz-spin 0.8s linear infinite;\\n  }\\n\\n  @keyframes housetabz-spin {\\n    to { transform: rotate(360deg); }\\n  }\\n\\n  .housetabz-message {\\n    margin-top: 8px;\\n    font-size: 13px;\\n    text-align: center;\\n  }\\n\\n  .success-box, .error-box {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    padding: 8px 12px;\\n    border-radius: 4px;\\n    margin-top: 8px;\\n  }\\n\\n  .success-box {\\n    background-color: rgba(16, 185, 129, 0.1);\\n    color: #047857;\\n  }\\n\\n  .error-box {\\n    background-color: rgba(239, 68, 68, 0.1);\\n    color: #b91c1c;\\n  }\\n\\n  .success-box svg, .error-box svg {\\n    margin-right: 8px;\\n  }\\n\\n  .success-box p, .error-box p {\\n    margin: 0;\\n  }\\n\";\ndocument.head.appendChild(style);\n// Export singleton instance\nexports[\"default\"] = HouseTabz.getInstance();\n// npx http-server -p 8080\n\n\n//# sourceURL=webpack://HouseTabz/./src/core/index.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/core/index.ts"](0, __webpack_exports__);
/******/ 	window.HouseTabz = __webpack_exports__["default"];
/******/ 	
/******/ })()
;
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/core/index.ts":
/*!***************************!*\
  !*** ./src/core/index.ts ***!
  \***************************/
/***/ (function() {

  eval("var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar HouseTabz = /** @class */ (function () {\n    function HouseTabz() {\n        this.config = null;\n        this.userId = null;\n    }\n    HouseTabz.prototype.init = function (config) {\n        this.config = config;\n        var env = config.environment || 'development';\n        switch (env) {\n            case 'production':\n                this.baseUrl = 'https://api.housetabz.com/api';\n                break;\n            case 'staging':\n                this.baseUrl = 'https://staging.housetabz.com/api';\n                break;\n            case 'development':\n            default:\n                this.baseUrl = 'http://localhost:3004/api';\n        }\n        var params = new URLSearchParams(window.location.search);\n        this.userId = params.get('user_id');\n        console.log('HouseTabz initialized:', this.config);\n    };\n    HouseTabz.prototype.mount = function (selector, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var container, wrapper, button, message;\n            var _this = this;\n            return __generator(this, function (_a) {\n                if (!this.userId) {\n                    console.error('User ID is not available in the query parameters.');\n                    return [2 /*return*/];\n                }\n                container = document.querySelector(selector);\n                if (!container) {\n                    console.error(\"Container with selector \\\"\".concat(selector, \"\\\" not found.\"));\n                    return [2 /*return*/];\n                }\n                wrapper = document.createElement('div');\n                wrapper.style.textAlign = 'center';\n                button = document.createElement('button');\n                button.className = 'housetabz-connect-button';\n                button.innerHTML = 'Connect to <span class=\"housetabz-highlight\">HouseTabz</span>';\n                message = document.createElement('div');\n                message.className = 'housetabz-success-message';\n                message.style.display = 'none';\n                button.onclick = function () { return __awaiter(_this, void 0, void 0, function () {\n                    var response, data, error_1;\n                    return __generator(this, function (_a) {\n                        switch (_a.label) {\n                            case 0:\n                                _a.trys.push([0, 3, , 4]);\n                                // Disable button and show processing state\n                                button.disabled = true;\n                                button.classList.add('loading');\n                                return [4 /*yield*/, fetch(\"\".concat(this.baseUrl, \"/partners/\").concat(this.config.partnerId, \"/staged-request\"), {\n                                        method: 'POST',\n                                        headers: {\n                                            'Content-Type': 'application/json',\n                                            'X-HouseTabz-API-Key': this.config.apiKey,\n                                            'X-HouseTabz-Secret-Key': this.config.secretKey // Add this line\n                                        },\n                                        body: JSON.stringify({\n                                            transactionId: options.transactionId,\n                                            serviceName: options.serviceName,\n                                            pricing: options.pricing,\n                                            userId: this.userId,\n                                            houseId: 1\n                                        })\n                                    })];\n                            case 1:\n                                response = _a.sent();\n                                if (!response.ok)\n                                    throw new Error(\"Request failed: \".concat(response.statusText));\n                                return [4 /*yield*/, response.json()];\n                            case 2:\n                                data = _a.sent();\n                                console.log('Response:', data);\n                                // Update success message\n                                button.classList.remove('loading');\n                                button.disabled = true;\n                                message.style.display = 'block';\n                                message.innerHTML = \"\\n          <div class=\\\"success-box\\\">\\n            <p>Request successful! Roommates have been notified to accept, service will be started upon acceptance.</p>\\n          </div>\\n        \";\n                                return [3 /*break*/, 4];\n                            case 3:\n                                error_1 = _a.sent();\n                                console.error('Error:', error_1);\n                                // Reset button state on failure\n                                button.disabled = false;\n                                button.classList.remove('loading');\n                                message.style.display = 'block';\n                                message.innerHTML = \"\\n          <div class=\\\"error-box\\\">\\n            <p>Something went wrong. Please try again.</p>\\n          </div>\\n        \";\n                                return [3 /*break*/, 4];\n                            case 4: return [2 /*return*/];\n                        }\n                    });\n                }); };\n                wrapper.appendChild(button);\n                wrapper.appendChild(message);\n                container.innerHTML = ''; // Clear existing content\n                container.appendChild(wrapper);\n                return [2 /*return*/];\n            });\n        });\n    };\n    return HouseTabz;\n}());\nwindow.HouseTabz = new HouseTabz();\n/* CSS */\nvar style = document.createElement('style');\nstyle.innerHTML = \"\\n  /* General Button Styles */\\n  .housetabz-connect-button {\\n    padding: 14px 24px;\\n    font-size: 16px;\\n    font-weight: 600;\\n    color: black;\\n    background-color: #34d399;\\n    border: none;\\n    border-radius: 8px;\\n    cursor: pointer;\\n    transition: all 0.3s ease;\\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\\n  }\\n\\n  .housetabz-connect-button:hover {\\n    background-color: #2d9f78;\\n    transform: translateY(-1px);\\n    box-shadow: 0 6px 10px rgba(0, 0, 0, 0.1);\\n  }\\n\\n  .housetabz-connect-button:disabled {\\n    background-color: #a7f3d0;\\n    cursor: not-allowed;\\n    box-shadow: none;\\n  }\\n\\n  .housetabz-connect-button.loading {\\n    cursor: progress;\\n  }\\n\\n  .housetabz-highlight {\\n    font-family: 'Montserrat', sans-serif;\\n    font-weight: 700;\\n    color: black;\\n  }\\n\\n  /* Success Message Styles */\\n  .housetabz-success-message {\\n    margin-top: 12px;\\n    font-size: 14px;\\n    text-align: center;\\n  }\\n\\n  .success-box {\\n    background-color: #e0fce4;\\n    color: #047857;\\n    padding: 12px;\\n    border-radius: 6px;\\n  }\\n\\n  .error-box {\\n    background-color: #fee2e2;\\n    color: #b91c1c;\\n    padding: 12px;\\n    border-radius: 6px;\\n  }\\n\";\ndocument.head.appendChild(style);\n\n\n//# sourceURL=webpack://housetabz-sdk/./src/core/index.ts?");

  /***/ })
  
  /******/ 	});
  /************************************************************************/
  /******/ 	
  /******/ 	// startup
  /******/ 	// Load entry module and return exports
  /******/ 	// This entry module is referenced by other modules so it can't be inlined
  /******/ 	var __webpack_exports__ = {};
  /******/ 	__webpack_modules__["./src/core/index.ts"]();
  /******/ 	
  /******/ })()
  ;